# Source: calico/templates/calico-kube-controllers.yaml
# This manifest creates a Pod Disruption Budget for Controller to allow K8s Cluster Autoscaler to evict

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: calico-kube-controllers
  namespace: {{ cluster_cni_namespace }}
  labels:
    k8s-app: calico-kube-controllers
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
---

# Source: calico/templates/calico-kube-controllers.yaml
# See https://github.com/projectcalico/kube-controllers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: {{ cluster_cni_namespace }}
  labels:
    k8s-app: calico-kube-controllers
spec:
  # The controllers can only have a single active instance.
  replicas: 3
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: {{ cluster_cni_namespace }}
      labels:
        k8s-app: calico-kube-controllers
    spec:
      volumes:
      - name: host-localtime
        hostPath:
          path: /etc/localtime
          type: File
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      # Mark the pod as a critical add-on for rescheduling.
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      serviceAccountName: calico-kube-controllers
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      priorityClassName: system-cluster-critical
      containers:
      - name: calico-kube-controllers
        image: docker.io/calico/kube-controllers:v3.29.2
        imagePullPolicy: IfNotPresent
        env:
        - name: FELIX_TYPHAK8SNAMESPACE
          value: "{{ cluster_cni_namespace }}"
        # Choose which controllers to run.
        - name: ENABLED_CONTROLLERS
          value: node
        - name: DATASTORE_TYPE
          value: kubernetes
        - name: TZ
          value: "Asia/Shanghai" 
        volumeMounts:
        - name: host-localtime
          mountPath: /etc/localtime
          readOnly: true
        livenessProbe:
          exec:
            command:
            - /usr/bin/check-status
            - -l
          periodSeconds: 10
          initialDelaySeconds: 10
          failureThreshold: 6
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - /usr/bin/check-status
            - -r
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
