---
# 管理 Chrony 服务的任务

- name: 确保 Chrony 服务已启用并运行
  service:
    name: "{{ chrony_service_name }}"
    state: "started"
    enabled: true
  tags:
  - service
  - chrony

- name: 重启 Chrony 服务
  service:
    name: "{{ chrony_service_name }}"
    state: "restarted"
  tags:
  - service
  - chrony
  - restart

- name: 以轮询的方式等待chronyd服务启动
  shell: "systemctl is-active {{ chrony_service_name }}.service"
  register: svc_status
  until: '"active" in svc_status.stdout'
  retries: 3
  delay: 3
  tags:
  - service
  - chrony
  - restart_chronyd

- name: 检查 Chrony 同步状态
  command: chronyc sources -v
  register: chrony_tracking
  changed_when: false
  ignore_errors: true
  tags:
  - service
  - chrony

- name: 显示 Chrony 同步状态
  debug:
    var: chrony_tracking.stdout_lines
  when: chrony_tracking is defined and chrony_tracking.stdout is defined
  tags:
  - service
  - chrony
